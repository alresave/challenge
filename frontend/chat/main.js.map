{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AACuD;AAEE;AACS;AACT;AACH;;;AAEtD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,kEAAc,EAAC;IACxC,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,2EAAiB,EAAC;IAC5C,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,kEAAc,EAAC;IACxC,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAE,+DAAa,EAAC;IACvC,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;CAClD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHjB,iEAAoB,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,EAC7C,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACXjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACC2B;AACS;AACtB;AAEW;AACT;AACU;AACS;AACT;AACH;;AAmB/C,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,CAAC,kEAAgB,EAAE,4DAAU,CAAC,YALvC,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;QAChB,uDAAW;mIAKF,SAAS,mBAflB,wDAAY;QACZ,kEAAc;QACd,2EAAiB;QACjB,kEAAc;QACd,+DAAa,aAGb,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;QAChB,uDAAW;;;;;;;;;;;;;;;;;;;;;;;;;ACxB4E;AAE3C;AAKiB;AACN;;;;;;;;;;;ICOnD,qEAA+B;IAED,uDAAQ;IAAA,4DAAO;;;IAAf,0DAAQ;IAAR,wEAAQ;;;IAOtC,qEAAqC;IAER,uDAAoC;;IAAA,4DAAO;IACpE,sEAAuC;IAAA,uDACzC;IAAA,4DAAM;IACN,sEAAK;IAAA,uDAAmB;IAAA,4DAAM;;;IAHH,0DAAoC;IAApC,8JAAoC;IACtB,0DACzC;IADyC,8FACzC;IACK,0DAAmB;IAAnB,mFAAmB;;ADL3B,MAAM,aAAa;IAYxB,YACU,OAAoB,EACpB,MAAkB,EAClB,MAAc,EACd,KAAqB,EACrB,MAAwB,EACxB,QAAsB;QALtB,YAAO,GAAP,OAAO,CAAa;QACpB,WAAM,GAAN,MAAM,CAAY;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAkB;QACxB,aAAQ,GAAR,QAAQ,CAAc;QAfhC,aAAQ,GAAkB,EAAE,CAAC;QAC7B,UAAK,GAAa,EAAE,CAAC;QACrB,SAAI,GAAW,EAAE,CAAC;QAClB,WAAM,GAAW,EAAE,CAAC;QACpB,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAW,EAAE,CAAC;QAErB,sBAAiB,GAAG,KAAK;IASrB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,KAAK,GAAG,GAAG;YAClB,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAClD,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACnC,IAAI,OAAO,GAAgB;wBACzB,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ;wBAC3B,IAAI,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,IAAI;wBACnB,OAAO,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,OAAO;wBACzB,QAAQ,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;qBAC7C;oBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC7B;gBACD,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC3C,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;oBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAC9B,IAAI,OAAO,GAAgB;4BACzB,QAAQ,EAAE,GAAG,CAAC,QAAQ;4BACtB,IAAI,EAAE,GAAG,CAAC,IAAI;4BACd,OAAO,EAAE,GAAG,CAAC,OAAO;4BACpB,QAAQ,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;yBACxC;wBACD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC,CAAC;gBACJ,CAAC,CAAC;YACJ,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,GAAG,GAAG,GAAG,+EAAqB,aAAa,IAAI,CAAC,QAAQ,SAAS,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,MAAM,EAAE,CAAC;QACvG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,GAAkB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAC5D,yCAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,GAAG,GAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1C,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;YACtB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,IAAI,GAAG,GAAiB;gBACtB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;aAClB;YACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC;YACF,OAAO;SACR;QACD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAS;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,OAAO;SAClB;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAGD,QAAQ;QACN,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa;QAClD,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,YAAY;QAChF,IAAI,IAAI,CAAC,iBAAiB,IAAI,QAAQ,EAAE;YACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK;SACjC;aAAM;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI;SAChC;IACL,CAAC;IAGA,cAAc;QACX;;WAEG;QACH,IAAI;YACA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC;SACtG;QAAC,OAAM,GAAG,EAAE,GAAG;IACpB,CAAC;;0EAxHY,aAAa;2GAAb,aAAa;;;;;qFAFb,CAAC,yEAAgB,CAAC;QCtB/B,yEAAmC;QAG7B,oEAA6E;QAC7E,wEAA8B;QAAA,uDAA6B;QAAA,4DAAK;QAGpE,yEAAiB;QAKmB,iEAAK;QAAA,4DAAO;QAG1C,yGAIK;QACP,4DAAK;QAEP,0EAAoD;QACiC,oIAAU,cAAU,IAAC;QACtG,yGAAqC;QAMrC,iEAAI;QACN,4DAAK;QACL,4EAA2B;QAEsB,oEAAQ;QAAA,4DAAQ;QAC7D,6EAMwB;QAAtB,mLAAqB;QANvB,4DAMwB;QAE1B,2EAAsB;QAC+B,sIAAS,iBAAa,IAAC;QAAC,gEAAI;QAAA,4DAAS;;QAxC9D,0DAA6B;QAA7B,kGAA6B;QAWpC,0DAAQ;QAAR,8EAAQ;QASL,0DAAW;QAAX,iFAAW;QAiB/B,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;IExB3B,0EAAiG;IAC/F,4HACF;IAAA,4DAAM;;;IAcN,0EAAiG;IAC/F,2HACF;IAAA,4DAAM;;ADvBL,MAAM,cAAc;IAEzB,YACU,OAAoB,EACpB,MAAc;QADd,YAAO,GAAP,OAAO,CAAa;QACpB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,QAAQ,GAAG;YACd,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;SACZ;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK,CAAC,IAAY;QAChB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;aACxC;YACD,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC;IACJ,CAAC;;4EAzBU,cAAc;4GAAd,cAAc;;QCZ3B,yEAAyB;QAEG,sRAAY,wEAAgB,KAAC;QACrD,oEAA6E;QAC7E,wEAA8B;QAAA,uEAAY;QAAA,4DAAK;QAC/C,yEAA2B;QAQzB,6LAA+B;QAP/B,4DASc;QACd,4EAA2B;QAAA,qEAAS;QAAA,4DAAQ;QAC5C,6GAEM;QACR,4DAAM;QACN,0EAA2B;QAQzB,8LAA+B;QAP/B,4DASc;QACd,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6GAEM;QACR,4DAAM;QAEN,2EAAkB;QAChB,oFAAuB;QAAA,yEAAmB;QAAA,mEAAO;QAAA,4DAAI;QAEvD,8EAA2D;QAAA,mEAAO;QAAA,4DAAS;;;;QA5BzE,0DAA+B;QAA/B,0FAA+B;QAIzB,0DAA8D;QAA9D,2GAA8D;QAYpE,0DAA+B;QAA/B,0FAA+B;QAIzB,0DAA8D;QAA9D,2GAA8D;;;;;;;;;;;;;;;;;;;;;;;;;;;IEfhE,0EAAiG;IAC/F,4HACF;IAAA,4DAAM;;;IACN,0EAA+C;IAC7C,iFACF;IAAA,4DAAM;;;IAcJ,0EAAwF;IACtF,wHACF;IAAA,4DAAM;;;IAcR,0EAAiG;IAC/F,2HACF;IAAA,4DAAM;;AD5CT,MAAM,iBAAiB;IAK5B,YACU,OAAoB,EACpB,MAAc;QADd,YAAO,GAAP,OAAO,CAAa;QACpB,WAAM,GAAN,MAAM,CAAQ;QAJxB,WAAM,GAAY,KAAK,CAAC;QAMtB,IAAI,CAAC,IAAI,GAAG;YACV,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAK,EAAE;SACb;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE;YAC/B,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;aACxC;YACD,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;;kFAnCU,iBAAiB;+GAAjB,iBAAiB;;QCX9B,yEAAyB;QAEU,yRAAY,2EAAsB,KAAC;QAC9D,oEAA6E;QAC7E,wEAA8B;QAAA,kEAAO;QAAA,4DAAK;QAC1C,yEAA2B;QAQzB,4LAA2B,kFAGjB,eAAW,IAHM;QAP3B,4DAUuB;QACvB,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,gHAEM;QACN,gHAEM;QACR,4DAAM;QACN,0EAA2B;QAQvB,0LAAwB;QAPxB,4DASc;QACd,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,gHAEM;QACR,4DAAM;QACR,0EAA2B;QAQzB,6LAA2B;QAP3B,4DASc;QACd,6EAA8B;QAAA,oEAAQ;QAAA,4DAAQ;QAC9C,gHAEM;QACR,4DAAM;QAEN,8EAA2D;QAAA,mEAAO;QAAA,4DAAS;;;;;QA7CzE,0DAA2B;QAA3B,sFAA2B;QAKrB,0DAA8D;QAA9D,2GAA8D;QAG9D,0DAAY;QAAZ,4EAAY;QAYhB,0DAAwB;QAAxB,mFAAwB;QAIlB,0DAAqD;QAArD,2GAAqD;QAY7D,0DAA2B;QAA3B,sFAA2B;QAIrB,0DAA8D;QAA9D,2GAA8D;;;;;;;;;;;;;;;;;;;;;;;;;;IE/CtE,qEAA+B;IAAyF,iVAAS,oFAAgB,KAAC;IAChJ,sEAAkE;IAClE,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,mFACF;;ADCD,MAAM,cAAc;IAIzB,YACU,OAAoB,EACpB,MAAc;QADd,YAAO,GAAP,OAAO,CAAa;QACpB,WAAM,GAAN,MAAM,CAAQ;QAHxB,iBAAY,GAAG,EAAE,CAAC;IAId,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IAChC,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE;YAC3B,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9D,CAAC;;4EA1BU,cAAc;4GAAd,cAAc;QCV3B,yEAAyB;QACzB,oEAA6E;QAC7E,wEAA8B;QAAA,gFAAqB;QAAA,4DAAK;QACxD,yEAAiD;QAGzC,wGAGS;QACX,4DAAK;QAGX,yEAA8B;QACgC,sIAAS,cAAU,IAAC;QAAC,gEAAI;QAAA,4DAAS;;QARnE,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;;;;;;;;;ACLyB;AAClB;AAGe;;;;AAQpD,MAAM,WAAW;IAKtB,YACU,UAAsB,EACtB,UAAsB;QADtB,eAAU,GAAV,UAAU,CAAY;QACtB,eAAU,GAAV,UAAU,CAAY;QANxB,YAAO,GAAG,6EAAmB,CAAC;QAC9B,cAAS,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACrC,eAAU,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;QACxC,aAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ;IAItC,CAAC;IAEL,KAAK,CAAC,KAAY;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CACjE,yCAAG,CAAC,GAAG,CAAC,EAAE;YACR,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC5C,CAAC,CAAC,CACH;IACH,CAAC;IAED,OAAO,CAAC,IAAU;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAChE,CAAC;IAED,UAAU,CAAC,QAAgB;QACzB,IAAI,WAAW,GAAG,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,WAAW,EAAC,CAAC,CAAC,IAAI,CACjF,yCAAG,CAAC,MAAM,CAAC,EAAE;YACX,OAAO,MAAM,CAAC,IAAI;QACpB,CAAC,CAAC,CACH;IACH,CAAC;;sEA9BU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;ACVuD;AAC3B;AACW;;;;AASpD,MAAM,WAAW;IAQtB,YACU,UAAsB,EACtB,UAAsB;QADtB,eAAU,GAAV,UAAU,CAAY;QACtB,eAAU,GAAV,UAAU,CAAY;QARxB,YAAO,GAAG,6EAAmB,CAAC;QAC9B,gBAAW,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;QACzC,aAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACnC,iBAAY,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QAC5C,kBAAa,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzC,cAAS,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAIrC,CAAC;IAEG,WAAW;QACjB,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC5E,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,WAAW,GAAG,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CACrG,yCAAG,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CACH;IACH,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,QAAQ,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CAC7E,yCAAG,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CACH;IACH,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,WAAW,GAAG,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,YAAY,EAAE,EAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CACtG,yCAAG,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CACH;IACH,CAAC;IAED,aAAa;QACX,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,aAAa,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,CAClF,yCAAG,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,IAAI;QAClB,CAAC,CAAC,CACH;IACH,CAAC;;sEAtDU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;ACLb,MAAM,UAAU;IAKrB;QAHO,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC;IAEL,CAAC;;oEALN,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;ACF0C;AACvB;AAEoB;;;AAOpD,MAAM,YAAY;IAKvB,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJxB,aAAQ,GAAG,8EAAoB;QAC/B,kBAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG;IAIvC,CAAC;IAEL,KAAK,CAAC,GAAiB;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,IAAI,CACpE,yCAAG,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CACH;IACH,CAAC;;wEAfU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;ACRO;;AAGpB,MAAM,gBAAgB;IAC3B,gBAAe,CAAC;IAIT,OAAO,CAAC,GAAW;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,GAAG,CAAC,CAAC;SAC/C;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEO,MAAM,CAAC,GAAW;QACxB,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;QAE5B,IAAI,UAAU,GAAG,mDAAoB,CAAC,CAAC,GAA8B,EAAE,EAAE;YACvE,EAAE,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjC,EAAE,CAAC,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,QAAQ,GAAG;YACb,IAAI,EAAE,CAAC,IAAY,EAAE,EAAE;gBACrB,IAAI,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;oBACpC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/B;YACH,CAAC;SACF,CAAC;QACF,OAAO,gDAAiB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACjD,CAAC;;gFA9BU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB;;;;;;;;;;;;;;;ACJ7B,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAM,+BAA+B;IAC5C,OAAO,EAAM,+BAA+B;IAC5C,QAAQ,EAAK,gCAAgC;IAC7C,SAAS,EAAI,gCAAgC;CAC9C,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACnBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/rooms/rooms.component.ts","./src/app/rooms/rooms.component.html","./src/app/services/auth.service.ts","./src/app/services/chat.service.ts","./src/app/services/jwt.service.ts","./src/app/services/stock.service.ts","./src/app/services/websocket.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [\n  {path:'login', component:LoginComponent},\n  {path:'signup', component:RegisterComponent},\n  {path:'rooms', component:RoomsComponent},\n  {path:'chat', component: ChatComponent},\n  {path:\"\", redirectTo:'/login', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chat';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HttpClient } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { ChatComponent } from './chat/chat.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    RoomsComponent,\n    ChatComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpClientModule, HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterViewChecked, ElementRef, ViewChild, Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subject, map } from \"rxjs\";\n\nimport { ChatService } from '../services/chat.service';\nimport { JwtService } from '../services/jwt.service';\nimport { ChatRequest, StockRequest } from '../model/request';\nimport { WebsocketService } from '../services/websocket.service';\nimport { environment } from 'src/environments/environment';\nimport { StockService } from '../services/stock.service'\n\ninterface Exch {\n  userName: string,\n  room:     string,\n  message:  string,\n  dateTime: number,\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css'],\n  providers: [WebsocketService]\n})\nexport class ChatComponent implements OnInit {\n\n  messageSub!: Subject<Exch>;\n  messages: ChatRequest[] = [];\n  users: string[] = [];\n  room: string = \"\";\n  ticket: string = \"\";\n  userName = \"\";\n  message: string = \"\";\n  @ViewChild('scrollMe') private myScrollContainer!: ElementRef;\n  disableScrollDown = false\n\n  constructor(\n    private chatSvr: ChatService,\n    private jwtSvr: JwtService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private socket: WebsocketService,\n    private stockSvr: StockService,\n  ) { }\n\n  ngOnInit(): void {\n    this.userName = this.jwtSvr.userName;\n    this.route.params.subscribe(params => {\n      this.room = params[\"room\"];\n      this.chatSvr.getRoomUsers(this.room).subscribe(res => {\n        this.users = res\n      })\n      this.chatSvr.getMessages(this.room).subscribe(res => {\n        for (let i = res.length; i > 0; i--) {\n          let message: ChatRequest = {\n            userName: res[i-1].userName,\n            room: res[i-1].room,\n            message: res[i-1].message,\n            dateTime: new Date(res[i-1].dateTime * 1000),\n          }\n          this.messages.push(message);\n        }\n        this.chatSvr.getChatTicket().subscribe(res => {\n          this.ticket = res;\n          this.connectToSocket();\n          this.messageSub.subscribe(msg => {\n            let message: ChatRequest = {\n              userName: msg.userName,\n              room: msg.room,\n              message: msg.message,\n              dateTime: new Date(msg.dateTime * 1000),\n            }\n            console.log(message);\n            this.messages.push(message);\n            this.scrollToBottom();\n          })\n        })\n      })\n\n    })\n  }\n\n  connectToSocket() {\n    let url = `${environment.socketURL}?userName=${this.userName}&room=${this.room}&ticket=${this.ticket}`;\n    console.log(url);\n    this.messageSub = <Subject<Exch>>this.socket.connect(url).pipe(\n      map(response => {\n        let msg: Exch = JSON.parse(response.data);\n        return msg;\n      })\n    );\n  }\n\n  sendMessage() {\n    if (this.message == \"\") {\n      return;\n    }\n    if (this.message.trim().startsWith(\"/stock\")) {\n      let arr = this.message.split(\"=\");\n      let req: StockRequest = {\n        room: this.room,\n        userName: this.userName,\n        stockCode: arr[1],\n      }\n      this.message = \"\";\n      this.stockSvr.stock(req).subscribe(resp => {\n        console.log(resp);\n      })\n      return;\n    }\n    let seconds = Math.floor(Date.now() / 1000);\n    let e: Exch = {\n      userName: this.userName,\n      room: this.room,\n      message: this.message,\n      dateTime: seconds,\n    }\n    this.messageSub.next(e);\n    this.message = \"\";\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n\n  onScroll() {\n    let element = this.myScrollContainer.nativeElement\n    let atBottom = element.scrollHeight - element.scrollTop === element.clientHeight\n    if (this.disableScrollDown && atBottom) {\n        this.disableScrollDown = false\n    } else {\n        this.disableScrollDown = true\n    }\n}\n\n\n scrollToBottom(): void {\n    /*if (this.disableScrollDown) {\n        return\n    }*/\n    try {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch(err) { }\n}\n\n}\n","<div class=\"container text-center\">\n  <div class=\"row\">\n    <div class=\"column\">\n      <img class=\"mb-4\" src=\"/front/assets/chatlogo.png\" alt=\"\" width=\"200\" height=\"200\">\n      <h3 class=\"h3 mb-3 fw-normal\">Welcome to room {{this.room}}</h3>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-3 border border-primary\" style=\"height:500px\">\n      <ul class=\"list-unstyled mb-0 h-75\">\n        <li>\n          <div>\n            <span class=\"text-center\">Users</span>\n          </div>\n        </li>\n        <li *ngFor=\"let user of users\">\n          <div>\n            <span class=\"text-center\">{{user}}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div class=\"col border border-secondary text-start\">\n      <ul class=\"list-unstyled mb-0\" style=\"overflow-y:scroll; height: 400px;\" #scrollMe (scroll)=\"onScroll()\">\n        <li *ngFor=\"let message of messages\">\n          <div>\n            <span class=\"text-muted\">{{message.dateTime | date :'short'}}</span>\n            <span class=\"ms-3 text-success\"></span>{{message.userName}}\n          </div>\n          <div>{{message.message}}</div>\n        <li>\n      </ul>\n      <form class=\"row g-3 mt-4\">\n        <div class=\"col-auto\">\n          <label for=\"message\" class=\"visually-hidden\">Password</label>\n          <input \n            type=\"text\" \n            class=\"form-control\" \n            id=\"message\" \n            name=\"message\" \n            placeholder=\"Type here...\"\n            [(ngModel)]=\"message\">\n        </div>\n        <div class=\"col-auto\">\n          <button type=\"submit\" class=\"btn btn-primary mb-3\" (click)=\"sendMessage()\">Send</button>\n        </div>\n      </form>\n  </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Login } from '../model/user';\n\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginReq: Login\n  constructor(\n    private authSvr: AuthService,\n    private router: Router,\n  ) { \n    this.loginReq = {\n      userName:\"\",\n      password:\"\"\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  login(form: NgForm) {\n    if (form.invalid) {\n      for (const control of Object.keys(form.controls)) {\n        form.controls[control].markAsTouched();\n      }\n      return;\n    }\n    this.authSvr.login(this.loginReq).subscribe(res => {\n      this.router.navigate([\"/rooms\"])\n    })\n  }\n\n}\n","<div class=\"text-center\">\n<main class=\"form-signin w-100 m-auto\">\n  <form #formLogin=\"ngForm\" (ngSubmit)=\"login(formLogin)\">\n    <img class=\"mb-4\" src=\"/assets/chatlogo.png\" alt=\"\" width=\"200\" height=\"200\">\n    <h3 class=\"h3 mb-3 fw-normal\">Please login</h3>\n    <div class=\"form-floating\">\n      <input \n      type=\"text\" \n      class=\"form-control\" \n      id=\"floatingInput\"\n      name=\"userName\" \n      placeholder=\"\"\n      required\n      [(ngModel)]=\"loginReq.userName\"\n      #userName=\"ngModel\"\n      minlength=\"4\">\n      <label for=\"floatingInput\">User name</label>\n      <div *ngIf=\"userName.invalid && (userName.dirty || userName.touched)\" class=\"alert alert-danger\">\n        User name is required and should be at least 4 characters long.\n      </div>\n    </div>\n    <div class=\"form-floating\">\n      <input \n      type=\"password\" \n      class=\"form-control\" \n      id=\"password\" \n      name=\"password\"\n      placeholder=\"\"\n      required\n      [(ngModel)]=\"loginReq.password\"\n      #password=\"ngModel\"\n      minlength=\"8\">\n      <label for=\"password\">Password</label>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n        Password is required and should be at least 8 characters long.\n      </div>\n    </div>\n\n    <div class=\"mb-3\">\n      Don't have an account? <a href=\"#/signup\">Sign Up</a>\n    </div>\n    <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\n  </form>\n</main>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../model/user';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: User;\n  exists: boolean = false;\n  \n  constructor(\n    private authSvr: AuthService,\n    private router: Router,\n  ) { \n    this.user = {\n      userName: \"\",\n      password: \"\",\n      email:    \"\",\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  register(form: NgForm) {\n    if (form.invalid || this.exists) {\n      for (const control of Object.keys(form.controls)) {\n        form.controls[control].markAsTouched();\n      }\n      return;\n    }\n    this.authSvr.addUser(this.user).subscribe(res => {\n      this.router.navigate([\"/login\"])\n    })\n  }\n\n  validUser() {\n    this.authSvr.userExists(this.user.userName).subscribe(res => {\n      this.exists = res;\n    })\n  }\n\n}\n","<div class=\"text-center\">\n    <main class=\"form-signin w-100 m-auto\">\n      <form #formRegister=\"ngForm\" (ngSubmit)=\"register(formRegister)\">\n        <img class=\"mb-4\" src=\"/assets/chatlogo.png\" alt=\"\" width=\"200\" height=\"200\">\n        <h3 class=\"h3 mb-3 fw-normal\">Sign up</h3>\n        <div class=\"form-floating\">\n          <input \n          type=\"text\" \n          class=\"form-control\" \n          id=\"userName\"\n          name=\"userName\" \n          placeholder=\"\"\n          required\n          [(ngModel)]=\"user.userName\"\n          #userName=\"ngModel\"\n          minlength=\"4\"\n          (change)=\"validUser()\">\n          <label for=\"userName\">User name</label>\n          <div *ngIf=\"userName.invalid && (userName.dirty || userName.touched)\" class=\"alert alert-danger\">\n            User name is required and should be at least 4 characters long.\n          </div>\n          <div *ngIf=\"exists\" class=\"alert alert-danger\">\n            User name is in use.\n          </div>\n        </div>\n        <div class=\"form-floating\">\n            <input \n            type=\"email\" \n            class=\"form-control\" \n            id=\"email\"\n            name=\"email\" \n            placeholder=\"\"\n            required\n            [(ngModel)]=\"user.email\"\n            #email=\"ngModel\"\n            minlength=\"4\">\n            <label for=\"email\">Email</label>\n            <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger\">\n              email is required and should be at least 4 characters long.\n            </div>\n          </div>\n        <div class=\"form-floating\">\n          <input \n          type=\"password\" \n          class=\"form-control\" \n          id=\"floatingPassword\" \n          name=\"password\"\n          placeholder=\"\"\n          required\n          [(ngModel)]=\"user.password\"\n          #password=\"ngModel\"\n          minlength=\"8\">\n          <label for=\"floatingPassword\">Password</label>\n          <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger\">\n            Password is required and should be at least 8 characters long.\n          </div>\n        </div>\n    \n        <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign up</button>\n      </form>\n    </main>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ChatService } from '../services/chat.service';\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\nexport class RoomsComponent implements OnInit {\n\n  rooms!: string[];\n  selectedRoom = \"\";\n  constructor(\n    private chatSvr: ChatService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.chatSvr.getRooms().subscribe(rooms => {\n      console.log(rooms);\n      this.rooms = rooms;\n    })\n  }\n\n  selectRoom(room: string) {\n    this.selectedRoom = room;\n    console.log(this.selectedRoom)\n  }\n\n  joinRoom() {\n    if (this.selectedRoom == \"\") {\n      return;\n    }\n    this.router.navigate(['/chat', { room: this.selectedRoom }])\n  }\n\n}\n","<div class=\"text-center\">\n<img class=\"mb-4\" src=\"/assets/chatlogo.png\" alt=\"\" width=\"200\" height=\"200\">\n<h3 class=\"h4 mb-3 fw-normal\">Select a room to chat</h3>\n<div class=\"d-flex gap-5 justify-content-center\">\n    <div class=\"dropdown-menu d-block position-static pt-0 mx-0 rounded-3 shadow overflow-hidden w-280px\">\n        <ul class=\"list-unstyled mb-0\">\n        <li *ngFor=\"let room of rooms\"><a class=\"dropdown-item d-flex align-items-center gap-2 py-2\" href=\"javascript:void(0);\" (click)=\"selectRoom(room)\">\n          <span class=\"d-inline-block bg-success rounded-circle p-1\"></span>\n          {{room}}\n        </a></li>\n      </ul>\n    </div>\n</div>\n<div class=\"text-center mt-3\">\n    <button class=\"mb-3 btn btn-lg btn-primary\" type=\"button\" (click)=\"joinRoom()\">Join</button>\n</div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, map, tap } from 'rxjs';\n\nimport { JwtService } from './jwt.service';\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse } from '../model/response';\nimport { Login, User } from '../model/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authUrl = environment.authURL;\n  private existsUrl = this.authUrl + \"/exists\";\n  private addUserurl = this.authUrl + \"/add_user\";\n  private loginUrl = this.authUrl + \"/login\"\n  constructor(\n    private httpClient: HttpClient,\n    private jwtService: JwtService,\n  ) { }\n\n  login(login: Login): Observable<ApiResponse> {\n    return this.httpClient.post<ApiResponse>(this.loginUrl, login).pipe(\n      tap(res => {\n        this.jwtService.token = res.data;\n        this.jwtService.userName = login.userName;\n      })\n    )\n  }\n\n  addUser(user: User): Observable<ApiResponse> {\n    return this.httpClient.put<ApiResponse>(this.addUserurl, user)\n  }\n\n  userExists(userName: string): Observable<boolean> {\n    let queryParams = new HttpParams().set(\"userName\", userName);\n    return this.httpClient.get<ApiResponse>(this.existsUrl, {params: queryParams}).pipe(\n      map(result => {\n        return result.data\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, map, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ChatRequest } from '../model/request';\n\nimport { JwtService } from './jwt.service';\nimport { ApiResponse } from '../model/response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private chatUrl = environment.chatURL;\n  private messagesUrl = this.chatUrl + \"/messages\";\n  private roomsUrl = this.chatUrl + \"/rooms\";\n  private roomUsersUrl = this.chatUrl + \"/room_users\";\n  private chatTicketUrl = this.chatUrl + \"/ticket\";\n  private socketUrl = this.chatUrl + \"/ws\";\n  constructor(\n    private httpClient: HttpClient,\n    private jwtService: JwtService,\n  ) { }\n\n  private _setHeaders(): HttpHeaders {\n    let headers = new HttpHeaders().set(\"Authorization\", this.jwtService.token);\n    return headers;\n  }\n\n  getMessages(room: string): Observable<any[]> {\n    let queryParams = new HttpParams().set(\"room\", room);\n    let headers = this._setHeaders();\n    return this.httpClient.get<ApiResponse>(this.messagesUrl, {params: queryParams, headers: headers}).pipe(\n      map(resp => {\n        return resp.data;\n      })\n    )\n  }\n\n  getRooms(): Observable<string[]> {\n    let headers = this._setHeaders();\n    return this.httpClient.get<ApiResponse>(this.roomsUrl, {headers: headers}).pipe(\n      map(resp => {\n        return resp.data;\n      })\n    )\n  }\n\n  getRoomUsers(room: string): Observable<string[]> {\n    let queryParams = new HttpParams().set(\"room\", room);\n    let headers = this._setHeaders();\n    return this.httpClient.get<ApiResponse>(this.roomUsersUrl, {params: queryParams, headers: headers}).pipe(\n      map(resp => {\n        return resp.data;\n      })\n    )\n  }\n\n  getChatTicket(): Observable<string> {\n    let headers = this._setHeaders();\n    return this.httpClient.get<ApiResponse>(this.chatTicketUrl, {headers: headers}).pipe(\n      map(resp => {\n        return resp.data\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  public token = \"\";\n  public userName = \"\";\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse, StockResponse } from '../model/response';\nimport { StockRequest } from '../model/request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  private stockUrl = environment.stockURL\n  private stockValueUrl = this.stockUrl + \"/\"\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  stock(req: StockRequest): Observable<StockResponse> {\n    return this.httpClient.post<ApiResponse>(this.stockValueUrl, req).pipe(\n      map(resp => {\n        return resp.data;\n      })\n    )\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport * as Rx from \"rxjs\";\n\n@Injectable()\nexport class WebsocketService {\n  constructor() {}\n\n  private subject!: Rx.Subject<MessageEvent>;\n\n  public connect(url: string): Rx.Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(url);\n      console.log(\"Successfully connected: \" + url);\n    }\n    return this.subject;\n  }\n\n  private create(url: string): Rx.Subject<MessageEvent> {\n    let ws = new WebSocket(url);\n\n    let observable = Rx.Observable.create((obs: Rx.Observer<MessageEvent>) => {\n      ws.onmessage = obs.next.bind(obs);\n      ws.onerror = obs.error.bind(obs);\n      ws.onclose = obs.complete.bind(obs);\n      return ws.close.bind(ws);\n    });\n    let observer = {\n      next: (data: Object) => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify(data));\n        }\n      }\n    };\n    return Rx.Subject.create(observer, observable);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  chatURL:     \"http://localhost:6312/chat/v1\",\n  authURL:     \"http://localhost:7312/auth/v1\",\n  stockURL:    \"http://localhost:5312/stock/v1\",\n  socketURL:   \"ws://localhost:6312/chat/v1/ws\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}